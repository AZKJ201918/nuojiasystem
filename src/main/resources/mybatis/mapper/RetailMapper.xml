<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.mapper.RetailMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.entity.Retail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parent" property="parent" jdbcType="DECIMAL" />
    <result column="grand" property="grand" jdbcType="DECIMAL" />
    <result column="parenttype" property="parenttype" jdbcType="INTEGER" />
    <result column="grandtype" property="grandtype" jdbcType="INTEGER" />
    <result column="outtime" property="outtime" jdbcType="TIMESTAMP" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, parent, grand, parenttype, grandtype, outtime, cid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from retail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from retail
    where cid = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from retail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shopping.entity.Retail" >
    insert into retail (id, parent, grand, 
      parenttype, grandtype, outtime, 
      cid)
    values (#{id,jdbcType=INTEGER}, #{parent,jdbcType=DECIMAL}, #{grand,jdbcType=DECIMAL}, 
      #{parenttype,jdbcType=INTEGER}, #{grandtype,jdbcType=INTEGER}, #{outtime,jdbcType=TIMESTAMP}, 
      #{cid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.entity.Retail" >
    insert into retail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parent != null" >
        parent,
      </if>
      <if test="grand != null" >
        grand,
      </if>
      <if test="parenttype != null" >
        parenttype,
      </if>
      <if test="grandtype != null" >
        grandtype,
      </if>
      <if test="outtime != null" >
        outtime,
      </if>
      <if test="cid != null" >
        cid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parent != null" >
        #{parent,jdbcType=DECIMAL},
      </if>
      <if test="grand != null" >
        #{grand,jdbcType=DECIMAL},
      </if>
      <if test="parenttype != null" >
        #{parenttype,jdbcType=INTEGER},
      </if>
      <if test="grandtype != null" >
        #{grandtype,jdbcType=INTEGER},
      </if>
      <if test="outtime != null" >
        #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.entity.Retail" >
    update retail
    <set >
      <if test="parent != null" >
        parent = #{parent,jdbcType=DECIMAL},
      </if>
      <if test="grand != null" >
        grand = #{grand,jdbcType=DECIMAL},
      </if>
      <if test="parenttype != null" >
        parenttype = #{parenttype,jdbcType=INTEGER},
      </if>
      <if test="grandtype != null" >
        grandtype = #{grandtype,jdbcType=INTEGER},
      </if>
      <if test="outtime != null" >
        outtime = #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.entity.Retail" >
    update retail
    set parent = #{parent,jdbcType=DECIMAL},
      grand = #{grand,jdbcType=DECIMAL},
      parenttype = #{parenttype,jdbcType=INTEGER},
      grandtype = #{grandtype,jdbcType=INTEGER},
      outtime = #{outtime,jdbcType=TIMESTAMP},
      cid = #{cid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>